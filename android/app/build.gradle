plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "net.bluetrace.cornhole_led"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    defaultConfig {
        applicationId "net.bluetrace.cornhole_led"
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion

        // versionCode must be an integer
        versionCode 7
        versionName "1.7"
    }

    signingConfigs {
        release {
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = keystoreProperties['storeFile']
                        ? file(keystoreProperties['storeFile'])
                        : null
            storePassword = keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            // Use the release config only
            signingConfig signingConfigs.release
            // For advanced releases:
            // minifyEnabled true
            // proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            // Debug build uses the default debug keystore automatically
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        warning 'deprecation'
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "17"
    }
}

flutter {
    source = "../.."
}
